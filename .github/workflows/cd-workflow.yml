name: CD with Gradle and SSH Deploy

on:
  push:
    branches:
      - 'develop'
      - 'main'
  pull_request:
    branches:
      - 'develop'
      - 'main'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: ‚òïÔ∏è Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: üêò Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: üëèüèª Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: üêò Build with Gradle (without test)
        run: ./gradlew clean build -x test --stacktrace

      - name: üì¶ Rename jar
        run: |
          JAR_FILE=$(ls build/libs/*.jar | head -n 1)
          mv "$JAR_FILE" build/libs/dopamine-market.jar

      - name: ü´¥üèª Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: ü™™ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-northeast-2'

      - name: ‚ûï Add GitHub Actions IP to EC2 Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
              --group-id ${{ secrets.SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port ${{ secrets.EC2_PORT }} \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: ‚úâÔ∏è Upload JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "build/libs/dopamine-market.jar"
          target: "/home/ubuntu/app/"

      - name: üöÄ SSH Deploy to EC2 (Kill & Restart JAR)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            echo "üóÇÔ∏è Move to app directory"
            cd /home/ubuntu/app || {
              echo "‚ùå Directory not found: /home/ubuntu/app"
              exit 1
            }

            echo "üõë Killing old process if exists"
            PID=$(pgrep -f 'dopamine-market.jar') || true
            if [ -n "$PID" ]; then
              kill $PID || true
              echo "‚è±Ô∏è Waiting for process to fully terminate..."
              while kill -0 $PID 2>/dev/null; do
                sleep 1
              done
              echo "‚úÖ Process terminated"
            else
              echo "‚ÑπÔ∏è No existing process found"
            fi

            echo "üöÄ Starting new JAR"
            nohup java -jar dopamine-market.jar > log.out 2>&1 &

            echo "‚úÖ Deploy completed"
            exit 0

      - name: ‚ùå Remove GitHub Actions IP from EC2 Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
              --group-id ${{ secrets.SECURITY_GROUP_ID }} \
              --protocol tcp \
              --port ${{ secrets.EC2_PORT }} \
              --cidr ${{ steps.ip.outputs.ipv4 }}/32
